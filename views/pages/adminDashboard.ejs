<!DOCTYPE html>
<html lang="en">
<head>
  <link rel="stylesheet" href="/style/style.css">
</head>
<body>
  <header>
    <div class="logo">TimeTracker</div>
    <nav>
      <a href="/admin-dashboard">Admin Dashboard</a>
      <a href="/add-user">Create User</a>
      <a href="/set-hours">Set Working Hours</a>
      <a href="/set-demarcation">Set Demarcation</a>
      <a href="/logout">Logout</a>
    </nav>
  </header>

  <div class="container">
    <h1>Admin Dashboard</h1>
    <p>View all users and their time logs:</p>

    <table>
      <thead>
        <tr>
          <th>User</th>
          <th>Clock In</th>
          <th>Clock Out</th>
          <th>Within Time</th>
          <th>Within Range</th>
          <th>Status</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody id="logsTable">
        <% if (logs.length > 0) { %>
          <% logs.forEach(log => { %>
            <tr>
              <!-- ✅ User Email -->
              <td><%= log.userId %></td>

              <!-- ✅ Clock In Time -->
              <td><%= log.clockIn ? new Date(log.clockIn).toLocaleString() : "N/A" %></td>

              <!-- ✅ Clock In Location -->
              <td>
                <% if (log.clockInLat && log.clockInLng) { %>
                  Lat: <%= log.clockInLat %>, Lng: <%= log.clockInLng %>
                <% } else { %>
                  N/A
                <% } %>
              </td>

              <!-- ✅ Clock Out Time -->
              <td><%= log.clockOut ? new Date(log.clockOut).toLocaleString() : "N/A" %></td>

              <!-- ✅ Clock Out Location -->
              <td>
                <% if (log.clockOutLat && log.clockOutLng) { %>
                  Lat: <%= log.clockOutLat %>, Lng: <%= log.clockOutLng %>
                <% } else { %>
                  N/A
                <% } %>
              </td>

              <!-- ✅ Within Time -->
              <td>
                <% 
                  const day = log.clockIn ? new Date(log.clockIn).toLocaleDateString("en-US", { weekday: "long" }) : null;
                  const workingHour = workingHours.find(hour => hour.day === day) || null;
                  const withinTime = workingHour && log.clockIn
                    ? new Date(log.clockIn) >= new Date(`1970-01-01T${workingHour.startHour}:00`) &&
                      new Date(log.clockOut || log.clockIn) <= new Date(`1970-01-01T${workingHour.endHour}:00`)
                      ? "Yes" : "No"
                    : "No";
                %>
                <%= withinTime %>
              </td>

              <!-- ✅ Within Range -->
              <td><%= log.withinRange ? log.withinRange : "Unknown" %></td>

              <!-- ✅ Status -->
              <td><%= log.status === "approved" ? "Approved" : "Pending" %></td>

              <!-- ✅ Approve/Unapprove Button -->
              <td>
                <button onclick="toggleApproval('<%= log.id %>', '<%= log.status %>')">
                  <%= log.status === "approved" ? "Unapprove" : "Approve" %>
                </button>
              </td>
            </tr>
          <% }) %>
        <% } else { %>
          <tr>
            <td colspan="9" style="text-align: center;">No logs available.</td>
          </tr>
        <% } %>
      </tbody>
    </table>
  </div>    
  <script>
    let logs = <%- JSON.stringify(logs) %>;
    let workingHours = <%- JSON.stringify(workingHours || []) %>;

    const logsTable = document.getElementById("logsTable");

    function isWithinTime(clockIn, clockOut, day) {
        const hours = workingHours.find(hour => hour.day === day);
        if (!hours) return "No";

        const start = new Date(`1970-01-01T${hours.startHour}:00`);
        const end = new Date(`1970-01-01T${hours.endHour}:00`);
        const userClockIn = new Date(clockIn);
        const userClockOut = new Date(clockOut || clockIn);

        return userClockIn >= start && userClockOut <= end ? "Yes" : "No";
    }

    function renderLogs() {
        logsTable.innerHTML = logs
            .map(log => {
                const day = new Date(log.clockIn).toLocaleDateString("en-US", { weekday: "long" });
                const withinTime = isWithinTime(log.clockIn, log.clockOut, day);

                return `<tr>
                  <td>${log.userId}</td>
                  <td>${log.clockIn}</td>
                  <td>${log.clockOut || "N/A"}</td>
                  <td>${withinTime}</td>
                  <td>${log.withinRange || "Unknown"}</td>
                  <td>${log.status === "approved" ? "Approved" : "Pending"}</td>
                  <td>
                    <button onclick="toggleApproval('${log.id}', '${log.status}')">
                      ${log.status === "approved" ? "Unapprove" : "Approve"}
                    </button>
                  </td>
                </tr>`;
            })
            .join("");
    }

    renderLogs();

    async function toggleApproval(logId, currentStatus) {
        if (!logId) {
            alert("Error: Missing Log ID");
            return;
        }

        console.log("ℹ️ Sending Log ID:", logId);

        try {
            const response = await fetch("/toggle-approval", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ logId: logId.trim(), status: currentStatus })
            });

            if (response.ok) {
                alert("Log status updated!");
                location.reload();
            } else {
                alert("Error updating log status.");
            }
        } catch (error) {
            console.error("❌ Error:", error);
            alert("Failed to update log status.");
        }
    }
  </script>
</body>
</html>
